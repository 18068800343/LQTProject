<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ldxx.dao.WhWarehouseCountDao">
	<resultMap id="baseResultMap" type="com.ldxx.vo.WhCangChuVo">

		<id column="id" property="id"/>
		<result column="bianhao" property="bianhao"/>
		<result column="chuliang" property="chuliang"/>
		<!-- 如果这里需要传递一个card和一个driverId到子查询中 -->
		<!-- cardParam表示自查询中用到的键(键可自己定义)、card表示当前结果集的card列的值(列根据上面的结果集来) -->
		<!-- driverIdParam表示自查询中用到的键(键可自己定义)、driverId表示当前结果集的driverId列的值(列根据上面的结果集来) -->
		<association property="whWarehouseCount" column="{storeNo = bianhao}"
					 javaType="com.ldxx.bean.WhWarehouseCount" select="selectNewWharehouseCountByStorNo">
		</association>
	</resultMap>

	<select id="getAllWhWarehouseCount" resultType="WhWarehouseCount">
		SELECT
			a.id,
			a.stor_no,
			a.datetime,
			a.weight,
			a.materials,
			a.meminfo,
			a.edit_user_id2,
			a.edit_datetime2,
			a.delete_state,
			a.max_weight,
			a.tiji,
			a.chang,
			a.kuan,
			a.gao,
		  CASE WHEN b.stones_name is NULL  THEN dm.material_name
			WHEN b.stones_name = '' THEN dm.material_name
			ELSE b.stones_name END
		  AS stonesName,
			usr.u_name
		FROM
			wh_warehouse_count AS a
		LEFT JOIN dic_stones b ON a.materials = b.id
		LEFT JOIN dic_materials dm ON dm.id = a.materials
		LEFT JOIN u_user usr ON a.edit_user_id2 = usr.user_id
		AND usr.delete_state = 1
		WHERE
			a.delete_state = 1
	</select>

	<select id="initCangChuGuanLi" resultMap="com.ldxx.dao.WhWarehouseCountDao.baseResultMap">
		select wc.* from wh_cangchu wc
	</select>

	<select id="selectNewWharehouseCountByStorNo" resultType="WhWarehouseCount">
		select top 1 * FROM wh_warehouse_count WHERE delete_state = 1 and stor_no = #{storeNo} ORDER BY edit_datetime2 desc
	</select>

	<select id="getWhWarehouseCountById" resultType="WhWarehouseCount">
		select a.id,a.stor_no,a.datetime,a.weight,a.materials,a.meminfo,a.edit_user_id2,a.edit_datetime2,a.delete_state,b.material_name as materialsName
		from wh_warehouse_count as a
		left join dic_materials b on a.materials=b.id 
		 where a.id=#{id}
	</select>

	<update id="updWhWarehouseCountById" parameterType="WhWarehouseCount">
		update wh_warehouse_count set 
			stor_no=#{wwc.storNo},
			datetime=#{wwc.datetime},
			weight=#{wwc.weight},
			materials=#{wwc.materials},
			meminfo=#{wwc.meminfo},
			edit_user_id2=#{wwc.editUserId2},
			edit_datetime2=#{wwc.editDatetime2},
			tiji=#{wwc.tiji},
			chang=#{wwc.chang},
			kuan=#{wwc.kuan},
			gao=#{wwc.gao},
			max_weight=#{wwc.maxWeight}
		where id=#{wwc.id}
	</update>
	
	<update id="delWhWarehouseCountById">
		update wh_warehouse_count set delete_state=0 where id=#{id}
	</update>

    <insert id="insertWhWarehouseCount" parameterType="WhWarehouseCount">
		insert into wh_warehouse_count(id,stor_no,datetime,weight,materials,meminfo,edit_user_id2,edit_datetime2,delete_state,max_weight,tiji,chang,kuan,gao)
		values(#{wwc.id},#{wwc.storNo},#{wwc.datetime},#{wwc.weight}
		,#{wwc.materials},#{wwc.meminfo},#{wwc.editUserId2}
		,#{wwc.editDatetime2},1,#{wwc.maxWeight},#{wwc.tiji}
		,#{wwc.chang},#{wwc.kuan},#{wwc.gao}
		)
	</insert>
    <select id="getWhWarehouseCountByStorNo" resultType="WhWarehouseCount">
		select top 1 a.id,a.stor_no,a.datetime,a.weight,a.materials,a.meminfo,a.edit_user_id2,a.edit_datetime2
		,a.delete_state,b.stones_name as materialsName,usr.u_name
		from wh_warehouse_count as a
		left join dic_stones b on a.materials=b.id
		LEFT JOIN u_user usr ON a.edit_user_id2 = usr.user_id and usr.delete_state = 1
		where a.delete_state=1 and a.stor_no=#{storNo}
	</select>

    <select id="getWhCangChuByStorNo" resultType="WhCangchu">
		select top 1 a.*,b.stones_name
		from wh_cangchu as a
		left join dic_stones b on a.cailiao=b.id
		where a.bianhao=#{storNo}
	</select>


    <select id="getLiaoCangPanDian" resultType="map">
		SELECT a.*,CASE WHEN b.dayWeightIn is null THEN 0 ELSE b.dayWeightIn end as dayWeightIn ,CASE WHEN b.dayWeightIn is null THEN 0 ELSE b.dayWeightIn-a.dayWeightOut end as dayWeightCha  FROM (SELECT top 7 SUM(weight) dayWeightOut,convert(char(10),production_time ,120) dayTimeOut FROM quality_by_plate_real_time_prodocution_data GROUP BY convert(char(10),production_time ,120) ORDER BY convert(char(10),production_time ,120) desc) a
		LEFT JOIN (SELECT SUM(weight) dayWeightIn,convert(char(10),datetime ,120) dayTimeIn FROM wh_incoming_material GROUP BY convert(char(10),datetime ,120)) b on a.dayTimeOut = b.dayTimeIn
		ORDER BY a.dayTimeOut ASC
	</select>

    <select id="getLaiLiaoWeightByTime" resultType="Double">
		SELECT SUM(weight) FROM wh_incoming_material WHERE datetime BETWEEN #{startTime} and  #{endTime}
	</select>

	<select id="getYongLiaoWeightByTime" resultType="Double">
		SELECT SUM(weight) FROM quality_by_plate_real_time_prodocution_data WHERE production_time BETWEEN #{startTime} and  #{endTime}
	</select>

	<select id="getProductEndTime" resultType="String">
		SELECT top 1 CONVERT (
				CHAR (19),
				production_time,
				120
			) FROM quality_by_plate_real_time_prodocution_data
				WHERE 	CONVERT (
				CHAR (10),
				production_time,
				120
			) = #{time} ORDER BY production_time desc
	</select>

	<select id="getLaiLiaoTime" resultType="String">
			SELECT top 1 CONVERT (
				CHAR (19),
				datetime,
				120
			) FROM wh_warehouse_count  	ORDER BY datetime desc
	</select>
</mapper>